# Generated by Django 4.2.1 on 2024-01-12 02:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LocalSolarPolicyData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('locality_name', models.TextField(blank=True, db_column='Locality Name', null=True)),
                ('jurisdiction_type', models.TextField(blank=True, db_column='Jurisdiction Type', null=True)),
                ('jurisdiction_website', models.TextField(blank=True, db_column='Jurisdiction Website', null=True)),
                ('utility_scale_solar_ordinance', models.TextField(blank=True, db_column='Utility-Scale Solar Ordinance?', null=True)),
                ('link_to_ordinance', models.TextField(blank=True, db_column='Link to Ordinance', null=True)),
                ('last_ordinance_update', models.TextField(blank=True, db_column='Last ordinance update', null=True)),
                ('solar_definition', models.TextField(blank=True, db_column='Solar definition', null=True)),
                ('solar_definition_1', models.TextField(blank=True, db_column='Solar definition.1', null=True)),
                ('solar_principal_use', models.FloatField(blank=True, db_column='Solar: Principal-Use Largest Definition', null=True)),
                ('permitted_zoning_districts', models.TextField(blank=True, db_column='Permitted Zoning Districts', null=True)),
                ('setback_yard_requirements', models.TextField(blank=True, db_column='Setback/Yard Requirements', null=True)),
                ('height', models.TextField(blank=True, db_column='Height ', null=True)),
                ('size_or_density_restrictions', models.TextField(blank=True, db_column='Size or Density Restrictions (Acreage or MW)', null=True)),
                ('requires_native_plantings', models.TextField(blank=True, db_column='Requires native plantings?', null=True)),
                ('requires_pollinator_plantings', models.TextField(blank=True, db_column='Requires pollinator plantings?', null=True)),
                ('pollinator_smart_program_reference', models.TextField(blank=True, db_column='Pollinator-Smart Program Reference', null=True)),
            ],
            options={
                'db_table': 'local_solar_policy_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolarProjectData',
            fields=[
                ('data_id', models.BigIntegerField(blank=True, db_column='Data ID', primary_key=True, serialize=False)),
                ('locality', models.TextField(blank=True, db_column='Locality', null=True)),
                ('city_county', models.TextField(blank=True, db_column='City/County', null=True)),
                ('project_name', models.TextField(blank=True, db_column='Project Name', null=True)),
                ('alternate_names', models.TextField(blank=True, db_column='Alternate Names', null=True)),
                ('parent_project', models.TextField(blank=True, db_column='Parent Project', null=True)),
                ('data_id_for_previous_project', models.TextField(blank=True, db_column='Data ID for Previous Project', null=True)),
                ('current_project_owner', models.TextField(blank=True, db_column='Current Project Owner', null=True)),
                ('project_owner', models.TextField(blank=True, db_column='Project Owner (at local application)', null=True)),
                ('entity_name', models.TextField(blank=True, db_column='Entity Name', null=True)),
                ('us_eia_entity_name', models.TextField(blank=True, db_column='US-EIA_Entity Name', null=True)),
                ('owner', models.TextField(blank=True, db_column='Owner', null=True)),
                ('developer_owner_field', models.TextField(blank=True, db_column='Developer(s)/Owner(s)', null=True)),
                ('previous_project_owner_applicant', models.TextField(blank=True, db_column='Previous project owner/applicant', null=True)),
                ('nameplate_capacity_at_local_action', models.TextField(blank=True, db_column='Nameplate Capacity at Local Action (MW)', null=True)),
                ('acreage', models.TextField(blank=True, db_column='Acreage', null=True)),
                ('field_parcel_acreage', models.TextField(blank=True, db_column='(Parcel) Acreage', null=True)),
                ('lease_acreage', models.TextField(blank=True, db_column='Lease acreage', null=True)),
                ('project_acreage', models.TextField(blank=True, db_column='Project Acreage', null=True)),
                ('in_fence_area', models.TextField(blank=True, db_column='In fence area', null=True)),
                ('under_panel_area', models.TextField(blank=True, db_column='Under panel area', null=True)),
                ('latitude', models.TextField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.TextField(blank=True, db_column='Longitude', null=True)),
                ('tax_map_parcel', models.TextField(blank=True, db_column='Tax Map Parcel # (TMP)', null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('land_use_at_time_of_local_application', models.TextField(blank=True, db_column='Land Use at Time of  Local Application', null=True)),
                ('zoning_permit_type', models.TextField(blank=True, db_column='Zoning Permit Type', null=True)),
                ('base_zoning', models.TextField(blank=True, db_column='Base Zoning', null=True)),
                ('zoning', models.TextField(blank=True, db_column='Zoning', null=True)),
                ('local_zoning_application_submittal_date', models.TextField(blank=True, db_column='Local Zoning Application Submittal Date', null=True)),
                ('planning_commission_action_date', models.TextField(blank=True, db_column='Planning Commission action date ', null=True)),
                ('additional_planning_commission_dates', models.FloatField(blank=True, db_column='Additional Planning Commission Dates where the project was revi', null=True)),
                ('local_bos_and_cc_action_date', models.TextField(blank=True, db_column='Local (BOS and CC) Action Date', null=True)),
                ('additional_bos_cc_dates', models.FloatField(blank=True, db_column='Additional BOS/CC Dates where the project was reviewed', null=True)),
                ('local_permit', models.TextField(blank=True, db_column='Local Permit', null=True)),
                ('local_permit_approval', models.TextField(blank=True, db_column='Local Permit Approval', null=True)),
                ('local_permit_status', models.TextField(blank=True, db_column='Local Permit Status', null=True)),
                ('state_permit_path', models.TextField(blank=True, db_column='State Permit\xa0Path (DEQ or SCC)', null=True)),
                ('state_permit_source', models.TextField(blank=True, db_column='State Permit Source', null=True)),
                ('vdeq_reps_commercial_operation_commenced', models.DateTimeField(blank=True, db_column='VDEQ-REPS_Commercial Operation Commenced', null=True)),
                ('concurrent_2232', models.TextField(blank=True, db_column='Concurrent 2232?', null=True)),
                ('status_of_2232_comp_plan_review', models.TextField(blank=True, db_column='Status of 2232/comp plan review', null=True)),
                ('offtaker', models.TextField(blank=True, db_column='Offtaker', null=True)),
                ('executed_siting_agreement', models.TextField(blank=True, db_column='Executed Siting Agreement? ', null=True)),
                ('link_to_permit_conditions', models.TextField(blank=True, db_column='Link to Permit/Conditions, if possible', null=True)),
                ('contains_pollinator_smart_features', models.TextField(blank=True, db_column='Contains Pollinator-Smart Features', null=True)),
                ('sheep_grazing', models.TextField(blank=True, db_column='Sheep Grazing (a type of agrivoltaics)', null=True)),
                ('agrivoltaic_crop_cover', models.TextField(blank=True, db_column='Agrivoltaic crop cover', null=True)),
                ('apiaries', models.TextField(blank=True, db_column='Apiaries (beekeeping, a type of agrovoltaics)', null=True)),
                ('battery_onsite', models.TextField(blank=True, db_column='Battery Onsite', null=True)),
                ('battery_size', models.TextField(blank=True, db_column='Battery Size', null=True)),
                ('axis_design', models.TextField(blank=True, db_column='Axis Design (Fixed or tilt/tracking)', null=True)),
                ('panel_type_specified_by_locality', models.TextField(blank=True, db_column='Panel Type Specified by Locality (CDTE or Crystalline Silicon) ', null=True)),
                ('plant_id', models.FloatField(blank=True, db_column='Plant ID (EIA)', null=True)),
                ('sector', models.TextField(blank=True, db_column='Sector (EIA)', null=True)),
                ('generator_id', models.TextField(blank=True, db_column='Generator ID (EIA)', null=True)),
                ('deq_permit_number', models.TextField(blank=True, db_column='DEQ Permit Number', null=True)),
                ('noi_received_date', models.TextField(blank=True, db_column='NOI Received Date (DEQ, "RENOIREC")', null=True)),
                ('interconnection', models.TextField(blank=True, db_column='Interconnection', null=True)),
                ('type_of_interconnection', models.TextField(blank=True, db_column='Type of interconnection', null=True)),
                ('operating_month', models.FloatField(blank=True, db_column='Operating Month', null=True)),
                ('operating_year', models.TextField(blank=True, db_column='Operating Year', null=True)),
                ('project_status', models.TextField(blank=True, db_column='Project Status (EIA)', null=True)),
                ('deq_permit_status', models.TextField(blank=True, db_column='DEQ Permit Status', null=True)),
                ('status_in_the_pjm_queue', models.FloatField(blank=True, db_column='Status in the PJM queue\xa0', null=True)),
                ('rps_program_compliance', models.FloatField(blank=True, db_column='RPS Program Compliance', null=True)),
                ('rps_development_plan', models.FloatField(blank=True, db_column='RPS Development Plan', null=True)),
                ('panel_type', models.FloatField(blank=True, db_column='Panel Type', null=True)),
                ('net_metering', models.FloatField(blank=True, db_column='Net-Metering', null=True)),
                ('qualifying_facility', models.FloatField(blank=True, db_column='Qualifying Facility (QF)', null=True)),
                ('qf_ferc_docket_number', models.FloatField(blank=True, db_column='QF FERC Docket Number', null=True)),
                ('operator', models.TextField(blank=True, db_column='Operator (EIA)', null=True)),
                ('us_eia_classification', models.TextField(blank=True, db_column='US-EIA_Classification', null=True)),
                ('us_eia_planned_commercial_operation_commence', models.TextField(blank=True, db_column='US-EIA_Planned Commercial Operation Commence', null=True)),
                ('vdeq_reps_construction_commenced', models.DateTimeField(blank=True, db_column='VDEQ-REPS_Construction Commenced', null=True)),
                ('vdeq_edm_permit_mw', models.FloatField(blank=True, db_column='VDEQ-EDM_Permit MW', null=True)),
                ('vdeq_emd_permit_name', models.TextField(blank=True, db_column='VDEQ-EMD_Permit Name', null=True)),
                ('entity_id_eia', models.FloatField(blank=True, db_column='Entity ID (EIA)', null=True)),
                ('scc_facility_type', models.TextField(blank=True, db_column='SCC Facility Type', null=True)),
                ('scc_cpcn_number', models.TextField(blank=True, db_column='SCC CPCN Number', null=True)),
                ('vdeq_reps_final_interconnection_agreement_report', models.DateTimeField(blank=True, db_column='VDEQ-REPS_Final Interconnection Agreement Report', null=True)),
                ('pjm_queue', models.TextField(blank=True, db_column='PJM Queue #', null=True)),
                ('deq_swm_status', models.FloatField(blank=True, db_column='DEQ SWM Status', null=True)),
                ('total_acreage', models.TextField(blank=True, db_column='Total Acreage (DEQ)', null=True)),
            ],
            options={
                'db_table': 'solar_project_data',
                'managed': False,
            },
        ),
    ]
